"use client"

import Link from 'next/link'
import './TopNavbar.scss'
import { useEffect, useState } from 'react'

const darkPalette = {
    font: "#EBEBEB",
    bg: "#001011",
    red: "#f698a8",
    grey: "#548687",
    bgtrans: "#001011f1",
    imgB: "0.7"
}

const lightPalette = {
    font: "#001011",
    bg: "#EBEBEB",
    red: "#bb2e2e",
    grey: "#6B818C",
    bgtrans: "#EBEBEBf1",
    imgB: "1"
}

export default function TopNavbar() {
    const [ls, setLS] = useState('')
    useEffect(() => {
        setLS(localStorage.getItem("theme") ?? '')
    }, [])

    useEffect(() => {
        setPalette(ls ? JSON.parse(ls) : lightPalette)
    }, [ls])

    // const [palette, setPalette] = useState(localStorage.getItem("theme") ? JSON.parse(localStorage.getItem("theme")!) : lightPalette)
    const [palette, setPalette] = useState(lightPalette)



    useEffect(() => {
        localStorage.setItem("theme", JSON.stringify(palette))

        document.documentElement.style.setProperty('--font', palette.font);
        document.documentElement.style.setProperty('--bg', palette.bg);
        document.documentElement.style.setProperty('--red', palette.red);
        document.documentElement.style.setProperty('--grey', palette.grey);
        document.documentElement.style.setProperty('--bgtrans', palette.bgtrans);
        document.documentElement.style.setProperty('--imgB', palette.imgB);
    }, [palette])


    return (
        <nav className='topnavbar'>
            <div className="left">
                <Link href={"/"} onClick={() => {
                    document.querySelectorAll('.link').forEach(oldlink => {
                        oldlink.classList.remove('selected')
                    })

                    document.querySelector('.link')?.classList.add('selected')
                }}>
                    <svg id="webdev" viewBox="0 0 210 121" fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <g>
                            <path d="M26.5573 93.5062C15.464 93.5062 5.38397 91.0529 -3.6827 86.1462C-12.6427 81.1329 -19.6827 74.3062 -24.8027 65.6662C-29.816 57.0262 -32.3227 47.3196 -32.3227 36.5462C-32.3227 25.7729 -29.816 16.0662 -24.8027 7.42623C-19.6827 -1.21377 -12.6427 -7.98711 -3.6827 -12.8938C5.38397 -17.9071 15.464 -20.4138 26.5573 -20.4138C37.6506 -20.4138 47.624 -17.9604 56.4773 -13.0538C65.4373 -8.1471 72.4773 -1.32044 77.5973 7.42623C82.7173 16.0662 85.2773 25.7729 85.2773 36.5462C85.2773 47.3196 82.7173 57.0796 77.5973 65.8262C72.4773 74.4662 65.4373 81.2396 56.4773 86.1462C47.624 91.0529 37.6506 93.5062 26.5573 93.5062ZM26.5573 82.9462C35.4106 82.9462 43.4106 80.9729 50.5573 77.0262C57.704 72.9729 63.304 67.4262 67.3573 60.3862C71.4106 53.2396 73.4373 45.2929 73.4373 36.5462C73.4373 27.7996 71.4106 19.9062 67.3573 12.8662C63.304 5.71957 57.704 0.172898 50.5573 -3.77378C43.4106 -7.82711 35.4106 -9.85377 26.5573 -9.85377C17.704 -9.85377 9.65064 -7.82711 2.3973 -3.77378C-4.74936 0.172898 -10.4027 5.71957 -14.5627 12.8662C-18.616 19.9062 -20.6427 27.7996 -20.6427 36.5462C-20.6427 45.2929 -18.616 53.2396 -14.5627 60.3862C-10.4027 67.4262 -4.74936 72.9729 2.3973 77.0262C9.65064 80.9729 17.704 82.9462 26.5573 82.9462ZM111.624 102.722C107.784 102.722 104.232 101.89 100.968 100.226C97.7681 98.5622 95.144 96.1942 93.096 93.1222L97.128 88.3222C98.984 91.0102 101.128 93.0582 103.56 94.4662C105.992 95.8742 108.648 96.5782 111.528 96.5782C119.912 96.5782 124.104 91.6502 124.104 81.7942V31.4902H99.5281V25.3462H131.112V81.5062C131.112 88.5462 129.448 93.8262 126.12 97.3462C122.856 100.93 118.024 102.722 111.624 102.722ZM230.056 92.5462L193.896 43.2662L157.896 92.5462H144.296L186.856 34.9462L147.016 -19.4538H160.616L194.376 26.3062L227.976 -19.4538H240.776L201.096 34.6262L243.816 92.5462H230.056Z" fill="black" />
                        </g>
                        <path d="M68.46 120L63.74 106H65.26L69.68 119.18H68.92L73.48 106H74.84L79.34 119.18H78.62L83.08 106H84.5L79.78 120H78.22L73.92 107.5H74.32L70 120H68.46ZM90.5728 120.1C89.4795 120.1 88.5195 119.873 87.6928 119.42C86.8661 118.953 86.2195 118.32 85.7528 117.52C85.2861 116.707 85.0528 115.78 85.0528 114.74C85.0528 113.7 85.2728 112.78 85.7128 111.98C86.1661 111.18 86.7795 110.553 87.5528 110.1C88.3395 109.633 89.2195 109.4 90.1928 109.4C91.1795 109.4 92.0528 109.627 92.8128 110.08C93.5861 110.52 94.1928 111.147 94.6328 111.96C95.0728 112.76 95.2928 113.687 95.2928 114.74C95.2928 114.807 95.2861 114.88 95.2728 114.96C95.2728 115.027 95.2728 115.1 95.2728 115.18H86.1328V114.12H94.5128L93.9528 114.54C93.9528 113.78 93.7861 113.107 93.4528 112.52C93.1328 111.92 92.6928 111.453 92.1328 111.12C91.5728 110.787 90.9261 110.62 90.1928 110.62C89.4728 110.62 88.8261 110.787 88.2528 111.12C87.6795 111.453 87.2328 111.92 86.9128 112.52C86.5928 113.12 86.4328 113.807 86.4328 114.58V114.8C86.4328 115.6 86.6061 116.307 86.9528 116.92C87.3128 117.52 87.8061 117.993 88.4328 118.34C89.0728 118.673 89.7995 118.84 90.6128 118.84C91.2528 118.84 91.8461 118.727 92.3928 118.5C92.9528 118.273 93.4328 117.927 93.8328 117.46L94.6328 118.38C94.1661 118.94 93.5795 119.367 92.8728 119.66C92.1795 119.953 91.4128 120.1 90.5728 120.1ZM103.603 120.1C102.683 120.1 101.856 119.893 101.123 119.48C100.39 119.053 99.8098 118.44 99.3831 117.64C98.9565 116.84 98.7431 115.873 98.7431 114.74C98.7431 113.593 98.9565 112.627 99.3831 111.84C99.8231 111.04 100.41 110.433 101.143 110.02C101.876 109.607 102.696 109.4 103.603 109.4C104.603 109.4 105.496 109.627 106.283 110.08C107.083 110.52 107.71 111.14 108.163 111.94C108.616 112.74 108.843 113.673 108.843 114.74C108.843 115.793 108.616 116.727 108.163 117.54C107.71 118.34 107.083 118.967 106.283 119.42C105.496 119.873 104.603 120.1 103.603 120.1ZM98.1831 120V105.16H99.6031V112.6L99.4031 114.72L99.5431 116.84V120H98.1831ZM103.503 118.84C104.25 118.84 104.916 118.673 105.503 118.34C106.09 117.993 106.556 117.513 106.903 116.9C107.25 116.273 107.423 115.553 107.423 114.74C107.423 113.913 107.25 113.193 106.903 112.58C106.556 111.967 106.09 111.493 105.503 111.16C104.916 110.813 104.25 110.64 103.503 110.64C102.756 110.64 102.083 110.813 101.483 111.16C100.896 111.493 100.43 111.967 100.083 112.58C99.7498 113.193 99.5831 113.913 99.5831 114.74C99.5831 115.553 99.7498 116.273 100.083 116.9C100.43 117.513 100.896 117.993 101.483 118.34C102.083 118.673 102.756 118.84 103.503 118.84ZM115.918 120.1C114.918 120.1 114.018 119.873 113.218 119.42C112.431 118.967 111.811 118.34 111.358 117.54C110.904 116.727 110.678 115.793 110.678 114.74C110.678 113.673 110.904 112.74 111.358 111.94C111.811 111.14 112.431 110.52 113.218 110.08C114.018 109.627 114.918 109.4 115.918 109.4C116.838 109.4 117.658 109.607 118.378 110.02C119.111 110.433 119.691 111.04 120.118 111.84C120.558 112.627 120.778 113.593 120.778 114.74C120.778 115.873 120.564 116.84 120.138 117.64C119.711 118.44 119.131 119.053 118.398 119.48C117.678 119.893 116.851 120.1 115.918 120.1ZM116.018 118.84C116.764 118.84 117.431 118.673 118.018 118.34C118.618 117.993 119.084 117.513 119.418 116.9C119.764 116.273 119.938 115.553 119.938 114.74C119.938 113.913 119.764 113.193 119.418 112.58C119.084 111.967 118.618 111.493 118.018 111.16C117.431 110.813 116.764 110.64 116.018 110.64C115.284 110.64 114.624 110.813 114.038 111.16C113.451 111.493 112.984 111.967 112.638 112.58C112.291 113.193 112.118 113.913 112.118 114.74C112.118 115.553 112.291 116.273 112.638 116.9C112.984 117.513 113.451 117.993 114.038 118.34C114.624 118.673 115.284 118.84 116.018 118.84ZM119.978 120V116.84L120.118 114.72L119.918 112.6V105.16H121.338V120H119.978ZM129.753 120.1C128.659 120.1 127.699 119.873 126.873 119.42C126.046 118.953 125.399 118.32 124.933 117.52C124.466 116.707 124.233 115.78 124.233 114.74C124.233 113.7 124.453 112.78 124.893 111.98C125.346 111.18 125.959 110.553 126.733 110.1C127.519 109.633 128.399 109.4 129.373 109.4C130.359 109.4 131.233 109.627 131.993 110.08C132.766 110.52 133.373 111.147 133.813 111.96C134.253 112.76 134.473 113.687 134.473 114.74C134.473 114.807 134.466 114.88 134.453 114.96C134.453 115.027 134.453 115.1 134.453 115.18H125.313V114.12H133.693L133.133 114.54C133.133 113.78 132.966 113.107 132.633 112.52C132.313 111.92 131.873 111.453 131.313 111.12C130.753 110.787 130.106 110.62 129.373 110.62C128.653 110.62 128.006 110.787 127.433 111.12C126.859 111.453 126.413 111.92 126.093 112.52C125.773 113.12 125.613 113.807 125.613 114.58V114.8C125.613 115.6 125.786 116.307 126.133 116.92C126.493 117.52 126.986 117.993 127.613 118.34C128.253 118.673 128.979 118.84 129.793 118.84C130.433 118.84 131.026 118.727 131.573 118.5C132.133 118.273 132.613 117.927 133.013 117.46L133.813 118.38C133.346 118.94 132.759 119.367 132.053 119.66C131.359 119.953 130.593 120.1 129.753 120.1ZM139.868 120L135.208 109.5H136.688L140.968 119.24H140.268L144.608 109.5H146.008L141.328 120H139.868Z" fill="black" />
                    </svg>
                </Link>
            </div>
            <div className="right" onClick={() => {
                if (palette == lightPalette)
                    setPalette(darkPalette)
                else
                    setPalette(lightPalette)
            }}>

                {
                    palette == lightPalette ?
                        <svg viewBox="0 0 102 103" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M51.158 81.3469C67.6716 81.3469 81.058 67.9604 81.058 51.4469C81.058 34.9336 67.6716 21.5469 51.158 21.5469C34.6447 21.5469 21.258 34.9336 21.258 51.4469C21.258 67.9604 34.6447 81.3469 51.158 81.3469Z" stroke="var(--font)" strokeWidth="6.92142" strokeLinecap="round" strokeLinejoin="round" />
                            <path d="M84.002 84.2909L83.404 83.6929M83.404 19.2009L84.002 18.6029M18.314 84.2909L18.912 83.6929M51.158 5.81487V5.44687M51.158 97.4469V97.0789M5.52603 51.4469H5.15804M97.158 51.4469H96.79M18.912 19.2009L18.314 18.6029" stroke="var(--font)" strokeWidth="9.22856" strokeLinecap="round" strokeLinejoin="round" />
                        </svg>

                        :
                        <svg viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M4.129 51.9421C5.8389 75.626 26.5952 94.895 51.4362 95.9527C68.9627 96.6885 84.6367 88.7786 94.0412 76.3158C97.936 71.2111 95.8461 67.808 89.339 68.9577C86.1567 69.5095 82.8793 69.7395 79.4595 69.6015C56.2334 68.6818 37.2346 49.8726 37.1396 27.6602C37.0921 21.6817 38.3745 16.0252 40.7019 10.8745C43.2667 5.17198 40.1794 2.45868 34.2422 4.89605C15.4333 12.5761 2.56159 30.9253 4.129 51.9421Z" stroke="var(--font)" strokeWidth="7.1467" strokeLinecap="round" strokeLinejoin="round" />
                        </svg>

                }
            </div>

            <div className="iconmenu">
                <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                    <path d="M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                    <path d="M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                    <path d="M19 6C19.5523 6 20 5.55228 20 5C20 4.44772 19.5523 4 19 4C18.4477 4 18 4.44772 18 5C18 5.55228 18.4477 6 19 6Z" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                    <path d="M19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11C18.4477 11 18 11.4477 18 12C18 12.5523 18.4477 13 19 13Z" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                    <path d="M19 20C19.5523 20 20 19.5523 20 19C20 18.4477 19.5523 18 19 18C18.4477 18 18 18.4477 18 19C18 19.5523 18.4477 20 19 20Z" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                    <path d="M5 6C5.55228 6 6 5.55228 6 5C6 4.44772 5.55228 4 5 4C4.44772 4 4 4.44772 4 5C4 5.55228 4.44772 6 5 6Z" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                    <path d="M5 13C5.55228 13 6 12.5523 6 12C6 11.4477 5.55228 11 5 11C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13Z" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                    <path d="M5 20C5.55228 20 6 19.5523 6 19C6 18.4477 5.55228 18 5 18C4.44772 18 4 18.4477 4 19C4 19.5523 4.44772 20 5 20Z" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                </svg>
            </div>

        </nav>
    )
}
